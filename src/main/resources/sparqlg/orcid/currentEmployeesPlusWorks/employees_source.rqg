PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX iter: <http://w3id.org/sparql-generate/iter/>

GENERATE <employees_source>(?ror) {

    ### if ROR is included, you could use GENERATE <https://projects.tib.eu/tapir/ror/organization/orga_mapping.rqg>( ?ror_data ) .
    ### but to keep data sources independent:
    GENERATE <https://projects.tib.eu/tapir/orcid/currentEmployeesPlusWorks/organization/orga_placeholder.rqg>( ?ror_data, ?wikidata_id, ?ringgold_id, ?grid_id ) .

    GENERATE <https://projects.tib.eu/tapir/orcid/currentEmployeesPlusWorks/employees_filter.rqg>(?orga_id, ?ror_id, ?ringgold_id, ?grid_id ) .

}
SOURCE <https://api.ror.org/organizations/{?ror}> AS ?ror_data
WHERE{
  ### extract wikidata id from ROR data
  BIND(fun:JSONPath(?ror_data, '$.external_ids.Wikidata.all[0]' ) AS ?wikidata_id)

  ### call wikidata to get ringgold and grid-id for organization
  BIND(<https://www.wikidata.org/w/api.php?action=wbgetentities&ids={?wikidata_id}&props=claims&format=json> as ?wikidata_url)
  BIND(fun:HTTPGet(?wikidata_url, "Accept: application/json") AS ?wikidata_response)
  FILTER(fun:HTTPExtractResponseCode( ?wikidata_response ) = 200)
  BIND(fun:HTTPExtractBody( ?wikidata_response ) AS ?wikidata_body)

  BIND(fun:JSONPath(?wikidata_body, '$.entities.{?wikidata_id}.claims.P3500[0].mainsnak.datavalue.value' ) AS ?ringgold_id)
  BIND(fun:JSONPath(?wikidata_body, '$.entities.{?wikidata_id}.claims.P2427[0].mainsnak.datavalue.value' ) AS ?grid_id)

  # after creating organization, get its id to make the orga-person connection
  BIND(<https://projects.tib.eu/tapir/orcid/currentEmployeesPlusWorks/organization/orga_id.rqg>(?ror_data) AS ?ror_id)
  BIND(?ror_id AS ?orga_id)
}